<?php
/**
 * @file
 * Handles installation of address block.
 */

/**
 * Implements hook_install().
 *
 * The address block is added here as it is used in the site template and needs
 * to exists. Therefor it's not inserted with the example content modules.
 */
function ding_frontend_install() {
  // Get translation function.
  $t = get_t();

  // Insert custom block with address in the footer.
  db_insert('block_custom')
    ->fields(array(
      'body' => '<p>Bibliotek - Gadenavn 1 - 1234 Bynavn - Telefon: 12 34 56 78 - <a href="mailto:bibliotek@example.com">bibliotek@example.com</a></p>',
      'info' => 'Footer adresse',
      'format' => 'ding_wysiwyg',
    ))
    ->execute();

  // Add role settings for custom footer block.
  db_insert('block_access_roles')
    ->fields(array(
      'module' => 'block',
      'delta' => 1,
      'rid' => 6,
      'permission' => 'config_body',
    ))
    ->execute();

  // Add shortcut for customer footer block.
  $shortcut_set = shortcut_set_load(SHORTCUT_DEFAULT_SET_NAME);
  $shortcut_set->links = array(
    array(
      'link_path' => 'admin/structure/block/manage/block/1/configure',
      'link_title' => $t('Footer address'),
      'weight' => -15,
    ),
  );
  shortcut_set_save($shortcut_set);

  ding_frontend_dynamic_background_upload_path();

  // Install footer menus.
  ding_frontend_create_footer_menus();
}

/**
 * Install custom menus.
 *
 * The footer menus are not part of the feature as the menus titles will be
 * reverted with the feature if they where. So to prevent this they are created
 * here.
 */
function ding_frontend_create_footer_menus() {
  $menus = array(
    'menu-footer-menu-1' => array(
      'menu_name' => 'menu-footer-menu-1',
      'title' => 'Footer menu 1',
      'description' => '',
    ),
    'menu-footer-menu-2' => array(
      'menu_name' => 'menu-footer-menu-2',
      'title' => 'Footer menu 2',
      'description' => '',
    ),
    'menu-footer-menu-3' => array(
      'menu_name' => 'menu-footer-menu-3',
      'title' => 'Footer menu 3',
      'description' => '',
    ),
    'menu-footer-menu-4' => array(
      'menu_name' => 'menu-footer-menu-4',
      'title' => 'Footer menu 4',
      'description' => '',
    ),
  );

  // Save menu group into menu_custom table.
  foreach ($menus as $menu) {
    // Check if the data exist.
    $exists = db_query("SELECT title FROM {menu_custom} WHERE menu_name = :menu_name", array(
      ':menu_name' => $menu['menu_name'],
    ))->fetchField();

    // Save the menu.
    if (!$exists) {
      menu_save($menu);
    }
  }
}

/**
 * Create dynamic_background upload path.
 */
function ding_frontend_dynamic_background_upload_path() {
  $settings = variable_get('dynamic_background_setting', array());
  $path = isset($settings['path']) ? $settings['path'] : 'backgrounds';
  $path = file_default_scheme() . '://' . $path;
  if (!file_prepare_directory($path, FILE_CREATE_DIRECTORY)) {
    drupal_set_message(t('dynamic_background: The entered path could not be created.'), 'error');
    watchdog('dynamic_background', 'The entered path (%path) could not be created.', array('%path' => $path), WATCHDOG_ERROR);
  }
}

/**
 * Update dynamic_background upload path.
 */
function ding_frontend_update_7001(&$sandbox) {
  ding_frontend_dynamic_background_upload_path();
}
